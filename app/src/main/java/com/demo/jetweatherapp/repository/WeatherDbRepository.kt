package com.demo.jetweatherapp.repositoryimport com.demo.jetweatherapp.data.WeatherDaoimport com.demo.jetweatherapp.model.Favoriteimport com.demo.jetweatherapp.model.Unitimport kotlinx.coroutines.flow.Flowimport javax.inject.Injectclass WeatherDbRepository @Inject constructor(private val weatherDao: WeatherDao) {    fun getFavorites(): Flow<List<Favorite>> = weatherDao.getFavorites()    suspend fun getFavById(city: String): Favorite = weatherDao.getFavById(city)    suspend fun insertFavorite(favorite: Favorite) = weatherDao.insertFavorite(favorite)    suspend fun updateFavorite(favorite: Favorite) = weatherDao.updateFavorite(favorite)    suspend fun deleteAllFavorites() = weatherDao.deleteAllFavorites()    suspend fun deleteFavorite(favorite: Favorite) = weatherDao.deleteFavorite(favorite)    //For units    fun getUnits(): Flow<List<Unit>> = weatherDao.getUnits()    suspend fun insertUnit(unit: Unit) = weatherDao.insertUnit(unit)    suspend fun updateUnit(unit: Unit) = weatherDao.updateUnit(unit)    suspend fun deleteAllUnits() = weatherDao.deleteAllUnits()    suspend fun deleteUnit(unit: Unit) = weatherDao.deleteUnit(unit)}
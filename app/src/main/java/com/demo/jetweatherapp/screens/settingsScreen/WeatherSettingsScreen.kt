package com.demo.jetweatherapp.screens.settingsScreenimport androidx.compose.foundation.backgroundimport androidx.compose.foundation.layout.*import androidx.compose.material.icons.Iconsimport androidx.compose.material.icons.filled.ArrowBackimport androidx.compose.material3.*import androidx.compose.runtime.*import androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.draw.clipimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.graphics.RectangleShapeimport androidx.compose.ui.unit.dpimport androidx.hilt.navigation.compose.hiltViewModelimport androidx.navigation.NavControllerimport com.demo.jetweatherapp.ui.theme.MyPrimaryColorimport com.demo.jetweatherapp.widgets.WeatherAppBar@OptIn(ExperimentalMaterial3Api::class)@Composablefun WeatherSettingsScreen(    navController: NavController,    settingsViewModel: SettingsViewModel = hiltViewModel()) {    Scaffold(topBar = {        WeatherAppBar(            title = "Settings",            icon = Icons.Default.ArrowBack,            isMainScreen = false,            navController = navController        ) {            navController.popBackStack()        }    }) {        Surface(            modifier = Modifier                .padding(top = it.calculateTopPadding())                .fillMaxSize()        ) {            var unitToggleState by remember { mutableStateOf(false) }            var measurementUnits = listOf("Imperial (F)", "Celsius (C)")            var choiceState by remember {                mutableStateOf("")            }            Column(                verticalArrangement = Arrangement.Center,                horizontalAlignment = Alignment.CenterHorizontally            ) {                Text(                    text = "Change Units of Measurement",                    modifier = Modifier.padding(bottom = 16.dp)                )                IconToggleButton(checked = !unitToggleState,                    onCheckedChange = {                        unitToggleState = !unitToggleState                        if (unitToggleState)                            choiceState = "Imperial (F)"                        else                            choiceState = "Celsius (C)"                    },                    modifier = Modifier                        .fillMaxWidth(0.5f)                        .clip(shape = RectangleShape)                        .padding(6.dp)                        .background(color = MyPrimaryColor)                ) {                }            }        }    }}
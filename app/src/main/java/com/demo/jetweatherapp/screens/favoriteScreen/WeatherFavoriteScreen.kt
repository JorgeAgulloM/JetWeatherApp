package com.demo.jetweatherapp.screens.favoriteScreenimport androidx.compose.foundation.clickableimport androidx.compose.foundation.layout.*import androidx.compose.foundation.lazy.LazyColumnimport androidx.compose.foundation.lazy.itemsimport androidx.compose.foundation.shape.CircleShapeimport androidx.compose.foundation.shape.CornerSizeimport androidx.compose.material.icons.Iconsimport androidx.compose.material.icons.filled.ArrowBackimport androidx.compose.material.icons.rounded.Deleteimport androidx.compose.material3.*import androidx.compose.runtime.Composableimport androidx.compose.runtime.collectAsStateimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.unit.dpimport androidx.hilt.navigation.compose.hiltViewModelimport androidx.navigation.NavControllerimport com.demo.jetweatherapp.model.Favoriteimport com.demo.jetweatherapp.navigation.WeatherScreensimport com.demo.jetweatherapp.widgets.WeatherAppBar@OptIn(ExperimentalMaterial3Api::class)@Composablefun WeatherFavoriteScreen(    navController: NavController,    favoriteViewModel: FavoriteViewModel = hiltViewModel()) {    Scaffold(topBar = {        WeatherAppBar(            title = "Favorite Cities",            icon = Icons.Default.ArrowBack,            isMainScreen = false,            navController = navController        ) {            navController.popBackStack()        }    }) {        Surface(            modifier = Modifier                .padding(                    start = 5.dp,                    end = 5.dp,                    top = it.calculateTopPadding()                )                .fillMaxWidth()        ) {            Column(                verticalArrangement = Arrangement.Center,                horizontalAlignment = Alignment.CenterHorizontally            ) {                val list = favoriteViewModel.favList.collectAsState().value                LazyColumn {                    items(items = list) { city ->                        CityRow(city, navController, favoriteViewModel)                    }                }            }        }    }}@Composablefun CityRow(    favorite: Favorite,    navController: NavController,    favoriteViewModel: FavoriteViewModel) {    Surface(        modifier = Modifier            .padding(4.dp)            .fillMaxWidth()            .height(50.dp)            .clickable {                  navController.navigate(WeatherScreens.MainScreen.name + "/${favorite.city}")            },        shape = CircleShape.copy(topEnd = CornerSize(6.dp)),        color = MaterialTheme.colorScheme.primary.copy(alpha = 0.3f)    ) {        Row(            modifier = Modifier.fillMaxWidth(),            verticalAlignment = Alignment.CenterVertically,            horizontalArrangement = Arrangement.SpaceEvenly        ) {            Text(text = favorite.city, modifier = Modifier.padding(start = 4.dp))            Surface(                shape = CircleShape,                color = MaterialTheme.colorScheme.primary.copy(alpha = 0.2f)            ) {                Text(                    text = favorite.country,                    modifier = Modifier.padding(4.dp),                    style = MaterialTheme.typography.titleMedium,                    fontWeight = FontWeight.Bold                )            }            Icon(                imageVector = Icons.Rounded.Delete,                contentDescription = "Delete favorite",                modifier = Modifier.clickable {                    favoriteViewModel.deleteFavorite(favorite)                },                tint = Color.Red.copy(alpha = 0.6f)            )        }    }}